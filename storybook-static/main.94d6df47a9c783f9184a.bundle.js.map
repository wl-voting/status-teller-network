{"version":3,"file":"main.94d6df47a9c783f9184a.bundle.js","sources":["webpack:///./src/js/components/UserInformation/Address.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {compactAddress} from \"../../utils/address\";\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addressHovered: false,\n      fixed: false\n    };\n  }\n\n  mouseOverAddress = () => {\n    this.setState({addressHovered: true});\n  };\n\n  mouseOutAddress = () => {\n    this.setState({addressHovered: false});\n  };\n\n  handleClick = () => {\n    this.setState({fixed: !this.state.fixed});\n  }\n\n  render() {\n    const address = this.props.compact || (!this.state.fixed &&  !this.state.addressHovered) ? compactAddress(this.props.address) : this.props.address;\n    return (<span title={this.props.address} onClick={this.handleClick} onMouseOver={this.mouseOverAddress}\n                  onMouseOut={this.mouseOutAddress}>{address}\n    </span>);\n  }\n}\n\nAddress.defaultProps = {\n  compact: false\n};\n\nAddress.propTypes = {\n  address: PropTypes.string,\n  compact: PropTypes.bool\n};\n\nexport default Address;\n"],"mappings":"AAIA","sourceRoot":""}